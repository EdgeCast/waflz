{
"config":
{
  "ruleset_id": "OWASP-CRS-4.0",
  "ruleset_version": "latest",
  "general_settings":
  {
    "paranoia_level": 4
  },
  "policies" : [
      "REQUEST-913-SCANNER-DETECTION.conf",
      "REQUEST-920-PROTOCOL-ENFORCEMENT.conf",
      "REQUEST-921-PROTOCOL-ATTACK.conf",
      "REQUEST-930-APPLICATION-ATTACK-LFI.conf",
      "REQUEST-931-APPLICATION-ATTACK-RFI.conf",
      "REQUEST-932-APPLICATION-ATTACK-RCE.conf",
      "REQUEST-933-APPLICATION-ATTACK-PHP.conf",
      "REQUEST-934-APPLICATION-ATTACK-GENERIC.conf",
      "REQUEST-941-APPLICATION-ATTACK-XSS.conf",
      "REQUEST-942-APPLICATION-ATTACK-SQLI.conf",
      "REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf",
      "REQUEST-944-APPLICATION-ATTACK-JAVA.conf"
  ]
},
"vectors":
[
  {
    "uri": "index.html",
    "query_str": "a=%27select%20*%20from%20testing%27",
    "headers":
    {
      "Host": "donuts.com",
      "User-Agent": "monkeez",
      "Accept": "*/*"
      
    },
    "tags":
    [
      "basic sql injection"
    ],
    "response":
    {
      "rule_msg": "Inbound Anomaly Score Exceeded (Total Score: 23): Last Matched Message: ",
      "sub_event":
      [
        {
          "rule_msg": "Invalid character in request (outside of very strict set)"
        },
        {
          "rule_msg": "SQL Injection Attack Detected via libinjection"
        },
        {
          "rule_msg": "Detects MSSQL code execution and information gathering attempts"
        },
        {
          "rule_msg": "SQL Injection Attack: Common Injection Testing Detected"
        },
        {
          "rule_msg": "Detects MySQL comment-/space-obfuscated injections and backtick termination"
        }
      ]
    }
  }
]
}
